{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSort","isReversed","setReserved","goodsReorder","goods","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAhDD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,QACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MACF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAajD,OAPIX,GACFI,EAAaQ,UAIfC,QAAQC,IAAIhB,EAAUE,GAEfI,EAwBcW,CAAkBrB,EAAiB,CACtDM,aACAF,aAGF,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYpB,IAAaL,EAASY,UAGxCc,QA7Ba,WACnBpB,EAAQN,EAASY,UAoBb,iCAaA,wBACEY,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYpB,IAAaL,EAASiB,SAGxCS,QA9CW,WACjBpB,EAAQN,EAASiB,SAqCb,4BAaA,wBACEO,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAAalB,IAGnBmB,QAnDQ,WACdlB,GAAaD,IA0CT,sBAaEF,IAAaL,EAASI,MAAQG,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAxDI,WACZpB,EAAQN,EAASI,MACjBI,GAAY,IAmDN,sBAUJ,6BACE,6BACGC,EAAakB,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCvIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1050b29.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSort] = useState(SortType.NONE);\n  const [isReversed, setReserved] = useState(false);\n\n  const sortLength = () => {\n    setSort(SortType.LENGTH);\n  };\n\n  const sortAlphabet = () => {\n    setSort(SortType.ALPABET);\n  };\n\n  const reverse = () => {\n    setReserved(!isReversed);\n  };\n\n  const reset = () => {\n    setSort(SortType.NONE);\n    setReserved(false);\n  };\n\n  const goodsReorder = getReorderedGoods(goodsFromServer, {\n    isReversed,\n    sortType,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )\n          }\n          onClick={sortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )\n          }\n          onClick={sortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )\n          }\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goodsReorder.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}